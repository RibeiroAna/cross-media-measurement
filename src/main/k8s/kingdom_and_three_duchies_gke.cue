// Copyright 2020 The Measurement System Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// cue cmd dump src/main/k8s/kingdom_and_three_duchies_from_cue.cue >
// src/main/k8s/kingdom_and_three_duchies_from_cue.yaml

package k8s

import (
	"encoding/yaml"
	"tool/cli"
)

command: dump: task: print: cli.Print & {
	text: """
          # Do NOT edit this file by hand.
          # This file is generated by kingdom_and_three_duchies.cue\n\n
          """ + yaml.MarshalStream(objects)
}

objects: [ for v in objectSets for x in v {x}]

objectSets: [
		setup_job,
		kingdom.kingdom_service,
		kingdom.kingdom_pod,
		kingdom.kingdom_job,
] + [ for d in duchies for v in d {v}]

#Duchies: [
	{
		name: "a"
		key:  "057b22ef9c4e9626c22c13daed1363a1e6a5b309a930409f8d131f96ea2fa888"
	},
	{
		name: "b"
		key:  "31cc32e7cd53ff24f2b64ae8c531099af9867ebf5d9a659f742459947caa29b0"
	},
	{
		name: "c"
		key:  "338cce0306416b70e901436cb9eca5ac758e8ff41d7b58dabadf8726608ca6cc"
	},
]

#GkeDuchy: #Duchy & {
	_duchy_names: [ for d in #Duchies {d.name}]
	_spanner_schema_push_flags: [
		"--ignore-already-existing-databases",
		"--instance-name=qa-instance",
		"--project-name=ads-open-measurement",
	]
	_spanner_flags: [
		"--spanner-instance=qa-instance",
		"--spanner-project=ads-open-measurement",
	]
	_blob_storage_flags: [
		"--google-cloud-storage-bucket=local-measurement-providers",
		"--google-cloud-storage-project=ads-open-measurement",
	]
	_images: {
		"liquid-legions-computation-control-server":         "gcr.io/ads-open-measurement/duchy/liquid-legions-v1-computation-control"
		"liquid-legions-herald-daemon":                      "gcr.io/ads-open-measurement/duchy/liquid-legions-v1-herald"
		"liquid-legions-mill-daemon":                        "gcr.io/ads-open-measurement/duchy/liquid-legions-v1-mill"
		"metric-values-storage-server":                      "gcr.io/ads-open-measurement/duchy/metric-values"
		"publisher-data-server":                             "gcr.io/ads-open-measurement/duchy/publisher-data"
		"push-spanner-schema-container":                     "gcr.io/ads-open-measurement/setup/push-spanner-schema"
		"spanner-liquid-legions-computation-storage-server": "gcr.io/ads-open-measurement/duchy/liquid-legions-v1-spanner-computation-storage"
	}
	_duchy_image_pull_policy: "Always"
}

duchies: {for d in #Duchies {"\(d.name)": #GkeDuchy & {_duchy: d}}}

kingdom: #Kingdom & {
	_duchy_ids: [ for d in #Duchies {"duchy-\(d.name)"}]
	_spanner_schema_push_flags: [
		"--ignore-already-existing-databases",
		"--instance-name=qa-instance",
		"--project-name=ads-open-measurement",
	]
	_spanner_flags: [
		"--ignore-already-existing-databases",
		"--spanner-database=kingdom",
		"--spanner-instance=qa-instance",
		"--spanner-project=ads-open-measurement",
	]
	_images: {
		"push-spanner-schema-container": "gcr.io/ads-open-measurement/setup/push-spanner-schema"
		"report-maker-daemon":           "gcr.io/ads-open-measurement/kingdom/report-maker"
		"report-starter-daemon":         "gcr.io/ads-open-measurement/kingdom/report-starter"
		"requisition-linker-daemon":     "gcr.io/ads-open-measurement/kingdom/requisition-linker"
		"gcp-kingdom-storage-server":    "gcr.io/ads-open-measurement/kingdom/storage-server"
		"global-computation-server":     "gcr.io/ads-open-measurement/kingdom/global-computation"
		"requisition-server":            "gcr.io/ads-open-measurement/kingdom/requisition"
	}
	_kingdom_image_pull_policy: "Always"
}

setup_job: "gcs-correctness-test-job": {
	apiVersion: "batch/v1"
	kind:       "Job"
	metadata: name: "gcs-correctness-test-job"
	spec: template: spec: {
		containers: [{
			name:            "gcs-correctness-runner-container"
			image:           "gcr.io/ads-open-measurement/loadtest/correctness-test"
			imagePullPolicy: "Always"
			args: [
				"--data-provider-count=2",
				"--campaign-count=1",
				"--generated-set-size=1000",
				"--universe-size=10000000000",
				"--run-id=",
				"--sketch-config-file=/app/wfa_measurement_system/src/main/kotlin/org/wfanet/measurement/loadtest/config/liquid_legions_sketch_config.textproto",
				"--publisher-data-service-target=" + (#Target & {name: "a-publisher-data-server"}).target,
				"--spanner-database=kingdom",
				"--spanner-instance=qa-instance",
				"--spanner-project=ads-open-measurement",
				"--google-cloud-storage-bucket=local-measurement-providers",
				"--google-cloud-storage-project=ads-open-measurement",
			]
		}]
		restartPolicy: "OnFailure"
	}
}
