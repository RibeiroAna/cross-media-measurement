load("//build/k8s:defs.bzl", "k8s_apply")
load("@com_github_tnarg_rules_cue//cue:cue.bzl", "cue_export")

DUCHY_IMAGES = [
    "//src/main/kotlin/org/wfanet/measurement/duchy/herald:liquid_legions_herald_daemon_image",
    "//src/main/kotlin/org/wfanet/measurement/duchy/mill:gcs_liquid_legions_mill_daemon_image",
    "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/computation/control:gcs_liquid_legions_server_image",
    "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/computation/storage:spanner_liquid_legions_computation_storage_server_image",
    "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/metricvalues:gcp_server_image",
    "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/publisherdata:publisher_data_server_image",
]

KINGDOM_IMAGES = [
    "//src/main/kotlin/org/wfanet/measurement/kingdom:report_maker_daemon_image",
    "//src/main/kotlin/org/wfanet/measurement/kingdom:report_starter_daemon_image",
    "//src/main/kotlin/org/wfanet/measurement/kingdom:requisition_linker_daemon_image",
    "//src/main/kotlin/org/wfanet/measurement/service/internal/kingdom:gcp_kingdom_storage_server_image",
    "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/globalcomputation:global_computation_server_image",
    "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/requisition:requisition_server_image",
]

BACKEND_FAKE_IMAGES = ["//src/main/kotlin/org/wfanet/measurement/service/testing/storage:fake_storage_server_image"]

SETUP_IMAGES = [
    "//src/main/kotlin/org/wfanet/measurement/tools:push_spanner_schema_image",
]

filegroup(
    name = "duchy_image_archives",
    srcs = [name + ".tar" for name in DUCHY_IMAGES],
)

filegroup(
    name = "kingdom_image_archives",
    srcs = [name + ".tar" for name in KINGDOM_IMAGES],
)

filegroup(
    name = "backend_fake_image_archives",
    srcs = [name + ".tar" for name in BACKEND_FAKE_IMAGES],
)

filegroup(
    name = "setup_archives",
    srcs = [name + ".tar" for name in SETUP_IMAGES],
)

filegroup(
    name = "all_archives",
    srcs = [
        ":backend_fake_image_archives",
        ":duchy_image_archives",
        ":kingdom_image_archives",
        ":setup_archives",
    ],
)

package_group(
    name = "k8s_deployer",
    packages = ["//src/main/kotlin/org/wfanet/measurement/tools/..."],
)

filegroup(
    name = "kingdom_and_single_duchy",
    srcs = [":kingdom_and_single_duchy_from_cue.yaml"],
    data = [
        ":all_archives",
    ],
    visibility = [":k8s_deployer"],
)

genrule(
    name = "kingdom_and_single_duchy_from_cue",
    srcs = ["kingdom_and_single_duchy.cue"],
    outs = ["kingdom_and_single_duchy_from_cue.yaml"],
    cmd = "cue cmd dump $< > $@",
    tools = [],
)

ALL_IMAGES = DUCHY_IMAGES + KINGDOM_IMAGES + BACKEND_FAKE_IMAGES + SETUP_IMAGES

ALL_IMAGE_ARCHIVES = [name + ".tar" for name in ALL_IMAGES]

k8s_apply(
    name = "kingdom_and_single_duchy_kind",
    src = ":kingdom_and_single_duchy_from_cue.yaml",
    image_archives = ALL_IMAGE_ARCHIVES,
    k8s_environment = "kind",
)

k8s_apply(
    name = "kingdom_and_single_duchy_u7s",
    src = ":kingdom_and_single_duchy_from_cue.yaml",
    image_archives = ALL_IMAGE_ARCHIVES,
    k8s_environment = "usernetes-containerd",
)
