load("//build:defs.bzl", "test_target")

package(default_visibility = [
    ":__pkg__",
    test_target(":__pkg__"),
    "//src/main/swig/common/crypto:__subpackages__",
])

_INCLUDE_PREFIX = "/src/main/cc"

cc_library(
    name = "protocol_encryption_utility",
    srcs = [
        "protocol_encryption_utility.cc",
    ],
    hdrs = [
        "protocol_encryption_utility.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "//src/main/cc/wfa/measurement/common:macros",
        "//src/main/cc/wfa/measurement/common:string_block_sorter",
        "//src/main/proto/wfa/measurement/internal/duchy:protocol_encryption_methods_cc_proto",
        "@absl//absl/algorithm:container",
        "@absl//absl/container:flat_hash_map",
        "@com_google_private_join_and_compute//crypto:commutative_elgamal",
        "@com_google_private_join_and_compute//crypto:ec_commutative_cipher",
        "@com_google_private_join_and_compute//util:status",
    ],
)

cc_library(
    name = "protocol_encryption_utility_wrapper",
    srcs = [
        "protocol_encryption_utility_wrapper.cc",
    ],
    hdrs = [
        "protocol_encryption_utility_wrapper.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        ":protocol_encryption_utility",
        "//src/main/proto/wfa/measurement/internal/duchy:protocol_encryption_methods_cc_proto",
        "@com_google_private_join_and_compute//util:status",
    ],
)
