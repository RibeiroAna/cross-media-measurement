load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_jvm_library")
load("@io_bazel_rules_docker//java:image.bzl", "java_image")

package(default_visibility = [
    "//src/main/kotlin/org/wfanet/measurement:__subpackages__",
    "//src/test/kotlin/org/wfanet/measurement:__subpackages__",
])

kt_jvm_library(
    name = "requisition_service",
    srcs = ["RequisitionService.kt"],
    deps = [
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/common",
        "//src/main/proto/wfa/measurement/api/v1alpha:data_provider_java_proto",
        "//src/main/proto/wfa/measurement/api/v1alpha:requisition_service_kt_jvm_grpc",
        "//src/main/proto/wfa/measurement/internal/kingdom:requisition_details_java_proto",
        "//src/main/proto/wfa/measurement/internal/kingdom:requisition_java_proto",
        "//src/main/proto/wfa/measurement/internal/kingdom:requisition_storage_service_kt_jvm_grpc",
    ],
)

kt_jvm_library(
    name = "requisition_server",
    srcs = ["RequisitionServer.kt"],
    deps = [
        ":requisition_service",
        "//imports/java/io/grpc:api",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/service/common",
    ],
)

java_binary(
    name = "RequisitionServer",
    main_class = "org.wfanet.measurement.service.v1alpha.requisition.RequisitionServerKt",
    runtime_deps = [
        ":requisition_server",
        "//imports/java/io/grpc/netty",
    ],
)

java_image(
    name = "requisition_server_image",
    main_class = "org.wfanet.measurement.service.v1alpha.requisition.RequisitionServerKt",
    visibility = ["//src:docker_image_deployment"],
    runtime_deps = [
        ":requisition_server",
        "//imports/java/io/grpc/netty",
    ],
)
