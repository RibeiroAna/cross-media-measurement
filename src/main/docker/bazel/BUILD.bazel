# Bazel build environment image.

load("//src/main/docker:constants.bzl", "DEBIAN_JAVA_11")
load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load(
    "//src/main/docker:defs.bzl",
    "container_commit_install_apt_packages",
    "container_commit_upgrade_apt_packages",
)
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
    "container_layer",
    "container_push",
)

JAVA = DEBIAN_JAVA_11

BASE_IMAGE = "@ubuntu_18_04//image"

BAZEL_IMAGE = "@bazel_image//image"

container_commit_install_apt_packages(
    name = "install_packages",
    image = BASE_IMAGE,
    packages = [
        "git",
        "openjdk-11-jdk-headless",
        "python",
        "python3",
        "swig",
        "tzdata",
    ],
    tags = ["manual"],
)

container_layer(
    name = "bazel_release_key",
    directory = "/etc/apt/trusted.gpg.d",
    files = ["bazel.gpg"],
    tags = ["manual"],
)

container_layer(
    name = "bazel_apt_list",
    directory = "/etc/apt/sources.list.d",
    files = ["bazel.list"],
    tags = ["manual"],
)

container_image(
    name = "bazel_apt_image",
    base = BASE_IMAGE,
    layers = [
        ":install_packages",
        ":bazel_release_key",
        ":bazel_apt_list",
    ],
    tags = ["manual"],
)

container_commit_install_apt_packages(
    name = "install_bazel",
    image = ":bazel_apt_image.tar",
    packages = ["bazel"],
    tags = ["manual"],
)

# Clean install based on BASE_IMAGE.
container_image(
    name = "bazel_clean_image",
    base = ":bazel_apt_image",
    env = JAVA.env,
    layers = [
        ":install_bazel",
    ],
    stamp = True,
    tags = ["manual"],
)

container_push(
    name = "push_bazel_clean_image",
    format = "Docker",
    image = ":bazel_clean_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/bazel",
    tag = "clean",
    tags = [
        "manual",
        "requires-network",
    ],
)

container_commit_upgrade_apt_packages(
    name = "upgrade_packages",
    image = BAZEL_IMAGE,
    tags = ["manual"],
)

# Updated image based on BAZEL_IMAGE.
container_image(
    name = "bazel_image",
    base = BAZEL_IMAGE,
    layers = [
        ":upgrade_packages",
    ],
    stamp = True,
    tags = ["manual"],
)

container_push(
    name = "push_bazel_image",
    format = "Docker",
    image = ":bazel_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/bazel",
    tags = [
        "manual",
        "requires-network",
    ],
)
