load("@io_bazel_rules_docker//container:container.bzl", "container_push")

# These rules push Docker images to the Google Cloud container registry.
# 'bazel build' builds the tarball, 'bazel run' will actually push it.

container_push(
    name = "push_duchy_liquid_legions_computation_control_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/computation/control:gcs_liquid_legions_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/liquid-legions-v1-computation-control",
)

container_push(
    name = "push_duchy_liquid_legions_herald_daemon_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/duchy/herald:liquid_legions_herald_daemon_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/liquid-legions-v1-herald",
)

container_push(
    name = "push_duchy_liquid_legions_mill_daemon_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/duchy/mill:gcs_liquid_legions_mill_daemon_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/liquid-legions-v1-mill",
)

container_push(
    name = "push_duchy_metric_values_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/metricvalues:gcp_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/metric-values",
)

container_push(
    name = "push_duchy_publisher_data_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/publisherdata:publisher_data_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/publisher-data",
)

container_push(
    name = "push_duchy_spanner_liquid_legions_computation_storage_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/internal/duchy/computation/storage:spanner_liquid_legions_computation_storage_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/duchy/liquid-legions-v1-spanner-computation-storage",
)

container_push(
    name = "push_kingdom_global_computation_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/globalcomputation:global_computation_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/global-computation",
)

container_push(
    name = "push_kingdom_report_maker_daemon_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/kingdom/deploy/common/daemon:report_maker_daemon_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/report-maker",
)

container_push(
    name = "push_kingdom_report_starter_daemon_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/kingdom/deploy/common/daemon:report_starter_daemon_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/report-starter",
)

container_push(
    name = "push_kingdom_requisition_linker_daemon_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/kingdom/deploy/common/daemon:requisition_linker_daemon_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/requisition-linker",
)

container_push(
    name = "push_kingdom_requisition_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/v1alpha/requisition:requisition_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/requisition",
)

container_push(
    name = "push_kingdom_data_server_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/service/internal/kingdom:gcp_kingdom_data_server_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/kingdom/data-server",
)

container_push(
    name = "push_setup_push_spanner_schema_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/tools:push_spanner_schema_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/setup/push-spanner-schema",
)

container_push(
    name = "push_gcs_correctness_test_runner_image",
    format = "Docker",
    image = "//src/main/kotlin/org/wfanet/measurement/loadtest:gcs_correctness_runner_image",
    registry = "gcr.io",
    repository = "ads-open-measurement/loadtest/correctness-test",
)
