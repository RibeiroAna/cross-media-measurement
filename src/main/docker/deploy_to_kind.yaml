# Copyright 2020 The Measurement System Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This should be a single Pod for each Duchy/Kingdom so that Pods within the
# Duchy/Kingdom (for example the Computation Control and Mill in the Duchy)
# share the same in-memory fake.
# TODO Seed with initial DB state.
apiVersion: v1
kind: Pod
metadata:
  name: duchy-spanner-emulator-pod
  labels:
    app: duchy-spanner-emulator-app
spec:
  containers:
    - name: duchy-spanner-emulator-container
      image: gcr.io/cloud-spanner-emulator/emulator

---
apiVersion: v1
kind: Service
metadata:
  name: duchy-spanner-emulator
spec:
  selector:
    app:  duchy-spanner-emulator-app
  # Nothing outside the cluster should connect to the storage instance.
  type: ClusterIP
  ports:
    - name: "grpc"
      port: 9010
      protocol: TCP
      targetPort: 9010
    - name: "http"
      port: 9020
      protocol: TCP
      targetPort: 9020

---
# For documentation on creating deployments see:
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#creating-a-deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: duchy-computation-control-deployment
  labels:
    app: duchy-computation-control-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: duchy-computation-control-app
  template:
    metadata:
      labels:
        app: duchy-computation-control-app
    spec:
      containers:
        - name: duchy-computation-control-container
          image: bazel/src/main/kotlin/org/wfanet/measurement/service/internal/duchy/computation/control:computation_control_server_image
          imagePullPolicy: Never
          # TODO Replace placeholders arguments with real values.
          args:
            - "--spanner-database=test-db"
            - "--spanner-project=test-project"
            - "--spanner-instance=test-instance"
            - "--spanner-emulator-host=$(DUCHY_SPANNER_EMULATOR_SERVICE_HOST):$(DUCHY_SPANNER_EMULATOR_SERVICE_PORT)"
            - "--google-cloud-storage-bucket=test-bucket"
            - "--google-cloud-storage-project=test-project"
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: duchy-computation-control
spec:
  selector:
    app: duchy-computation-control-app
  # type defaults to ClusterIP which is only accessible within the cluster.
  # NodePort lets you specify a port for connecting to the service from outside the cluster.
  # This is convenient for testing and local runs but in production you probably want LoadBalancer.
  type: NodePort
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 30036

---
apiVersion: v1
kind: Pod
metadata:
  name: duchy-mill-pod
spec:
  containers:
    - name: duchy-mill-container
      image: bazel/src/main/kotlin/org/wfanet/measurement/service/internal/duchy/mill:mill_task_image
      imagePullPolicy: Never
      # TODO Provide hosts are ports for all Duchies.
      args: ["--next-worker=$(DUCHY_COMPUTATION_CONTROL_SERVICE_HOST):$(DUCHY_COMPUTATION_CONTROL_SERVICE_PORT)"]